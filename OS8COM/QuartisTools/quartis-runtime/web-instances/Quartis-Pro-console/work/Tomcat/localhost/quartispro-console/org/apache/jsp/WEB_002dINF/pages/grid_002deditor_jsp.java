/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.5
 * Generated at: 2019-02-28 09:44:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Properties;
import com.osys.quartispro.common.Application;
import org.json.simple.JSONObject;
import org.json.simple.JSONArray;

public final class grid_002deditor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Osys/QuartisTools/quartis-runtime/web-instances/Quartis-Pro-console/webapps/quartispro-console/WEB-INF/lib/jstl-impl.jar!/META-INF/c.tld", Long.valueOf(1343816218000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-impl.jar", Long.valueOf(1546445652000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.osys.quartispro.common.Application");
    _jspx_imports_classes.add("java.util.Properties");
    _jspx_imports_classes.add("org.json.simple.JSONObject");
    _jspx_imports_classes.add("org.json.simple.JSONArray");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 
    String version = "1.0.4.1";

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <meta charset=\"UTF-8\" />\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\n");
      out.write("        <title>Grid Editor</title>\n");
      out.write("\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/animation.css?version=");
      out.print( version );
      out.write("\" />\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/lib/bootstrap.min.css?version=");
      out.print( version );
      out.write("\" />\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/lib/normalize.min.css?version=");
      out.print( version );
      out.write("\" />\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/mainframe.css?version=");
      out.print( version );
      out.write("\" />\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/swappages.css?version=");
      out.print( version );
      out.write("\" />\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/quartis-manager.css?version=");
      out.print( version );
      out.write("\" />\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/lib/spectrum.min.css?version=");
      out.print( version );
      out.write("\" />\n");
      out.write("\n");
      out.write("        ");

            Application app = Application.getInstance();
            for (String path : app.getCssRelativePaths()) {
                out.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"load?path=" + path + "?version=" + version + "\" />");
            }
        
      out.write("\n");
      out.write("\n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                margin: 0;\n");
      out.write("                background-color: white;\n");
      out.write("                color: black; }\n");
      out.write("\n");
      out.write("            .mainframe {\n");
      out.write("                position: relative;\n");
      out.write("                overflow: hidden;\n");
      out.write("                width: 100%;\n");
      out.write("                height: 100%;\n");
      out.write("            }\n");
      out.write("            .mainframe-tabs {\n");
      out.write("                overflow: hidden;\n");
      out.write("                width: 100%;\n");
      out.write("                height: 100%;\n");
      out.write("            }\n");
      out.write("            .mainframe-tabs-H {\n");
      out.write("                overflow: hidden;\n");
      out.write("                position: relative;\n");
      out.write("                float: left;\n");
      out.write("            }\n");
      out.write("            .mainframe-tab-H {\n");
      out.write("                overflow: hidden;\n");
      out.write("                position: relative;\n");
      out.write("                float: left;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            .toolbar {\n");
      out.write("                overflow:hidden;\n");
      out.write("                margin: 20px 20px 10px 20px; }\n");
      out.write("\n");
      out.write("            .toolbar-board {\n");
      out.write("                overflow:hidden;\n");
      out.write("                margin: 10px 20px 10px 20px;\n");
      out.write("                display: table; }\n");
      out.write("\n");
      out.write("            .toolbar-board > * {\n");
      out.write("                display: table-cell; }\n");
      out.write("\n");
      out.write("            .toolbar-board > *:last-child {\n");
      out.write("                text-align: right; }\n");
      out.write("\n");
      out.write("            .grid-modal {\n");
      out.write("                overflow: hidden;\n");
      out.write("                position: absolute;\n");
      out.write("                top: 0px;\n");
      out.write("                left: 0px;\n");
      out.write("                width:100%;\n");
      out.write("                height:100%;\n");
      out.write("                background-color: #2E2E2E;\n");
      out.write("                opacity: 0.8;\n");
      out.write("                z-index: 1; }\n");
      out.write("\n");
      out.write("            .dialog {\n");
      out.write("                width: 800px;\n");
      out.write("                height: 600px;\n");
      out.write("                opacity: 1.0;\n");
      out.write("                z-index: 3; }\n");
      out.write("            \n");
      out.write("            .responsiveDialog {\n");
      out.write("                display: none;\n");
      out.write("                width: 800px;\n");
      out.write("                opacity: 1.0;\n");
      out.write("                z-index: 4;\n");
      out.write("                position: absolute;\n");
      out.write("                left: 50%;\n");
      out.write("                top: 50%;\n");
      out.write("                transform: translate(-50%, -50%);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .alert-dialog {\n");
      out.write("                display: none;\n");
      out.write("                position: absolute;\n");
      out.write("                width: 300px;\n");
      out.write("                line-height: 25px;\n");
      out.write("                height: 60px;\n");
      out.write("                top: 10px;\n");
      out.write("                right: 10px;\n");
      out.write("                opacity: 1.0;\n");
      out.write("                z-index: 5;\n");
      out.write("                text-align: center;\n");
      out.write("                color: white;\n");
      out.write("                background-color: white;\n");
      out.write("                border: 1px solid white; }\n");
      out.write("\n");
      out.write("            #consoles {\n");
      out.write("                overflow:hidden;\n");
      out.write("                margin: 20px 20px 20px 20px; }\n");
      out.write("\n");
      out.write("            #editor {\n");
      out.write("                overflow:hidden; }\n");
      out.write("\n");
      out.write("            #designation {\n");
      out.write("                overflow:auto;\n");
      out.write("                margin: 0px 20px 0px 20px;\n");
      out.write("                height: 60px }\n");
      out.write("\n");
      out.write("            #workspace {\n");
      out.write("                overflow:hidden;\n");
      out.write("                margin: 10px 20px 0px 20px;\n");
      out.write("                border: 1px solid #2D3039; }\n");
      out.write("\n");
      out.write("            #board {\n");
      out.write("                overflow:auto;\n");
      out.write("                margin: 0px 20px 10px 20px;\n");
      out.write("                color: #FFFFFF;\n");
      out.write("                font-size: 15px; }\n");
      out.write("\n");
      out.write("            #header {\n");
      out.write("                border: 1px solid #ccc;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .selected {\n");
      out.write("                border: 2px solid red !important;\n");
      out.write("                z-index: 2;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .gridcell {\n");
      out.write("                position: absolute;\n");
      out.write("                overflow: hidden;\n");
      out.write("                box-sizing: border-box;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .panel-heading span\n");
      out.write("            {\n");
      out.write("                margin-top: -26px;\n");
      out.write("                font-size: 15px;\n");
      out.write("                margin-right: -12px;\n");
      out.write("            }\n");
      out.write("            .clickable {\n");
      out.write("                background: rgba(0, 0, 0, 0.15);\n");
      out.write("                display: inline-block;\n");
      out.write("                border-radius: 4px;\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .slide .carousel-indicators {\n");
      out.write("                display: none;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            #loader {\n");
      out.write("                position: absolute;\n");
      out.write("                z-index: 6;\n");
      out.write("                width: 100%;\n");
      out.write("                height: 100%;\n");
      out.write("                background-color: white;\n");
      out.write("                display: block;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .sp-replacer {\n");
      out.write("                width: 100%;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .sp-dd {\n");
      out.write("                float: right;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            #dashboard .gridcell {\n");
      out.write("                border: 1px solid rgb(97, 207, 119);\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("\n");
      out.write("        <script src=\"js/lib/jquery-3.3.1.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/interact.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/react.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/react-dom.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/flux.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/microevent.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/moment-with-locales.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/spectrum.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/lib/bootstrap.min.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/mainframe-1.0.0.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/swappages-1.0.0.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/quartis-i18n-1.0.0.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/quartis-app-1.0.0.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/quartis-query-1.0.0.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/quartis-manager-grid-1.0.1.js?version=");
      out.print( version );
      out.write("\" type=\"text/javascript\"></script>\n");
      out.write("\n");
      out.write("        ");

            for (String path : app.getJsRelativePaths()) {
                out.println("<script type=\"text/javascript\" src=\"load?path=" + path + "?version=" + version + "\"></script>");
            }
        
      out.write("\n");
      out.write("\n");
      out.write("        ");

            for (String path : app.getComponentsRelativePaths()) {
                out.println("<script type=\"text/javascript\" src=\"load?path=" + path + "?version=" + version + "\"></script>");
            }
        
      out.write("\n");
      out.write("\n");
      out.write("        ");

            String lang = "en";
            Properties trad = (Properties) request.getAttribute("trad");
        
      out.write("\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div id=\"loader\"></div>\n");
      out.write("        <div id=\"mainframe\">\n");
      out.write("            <div class=\"mainframe-tabs\">\n");
      out.write("                <div class=\"mainframe-tabs-H\">\n");
      out.write("\n");
      out.write("                    <div id=\"list\" class=\"mainframe-tab-H\">\n");
      out.write("                        <div class=\"toolbar\">\n");
      out.write("                            <b><span style=\"font-size: 18px\">");
      out.print( trad.getProperty("grid.list.console"));
      out.write(":</span></b>\n");
      out.write("                        </div>\n");
      out.write("                        <div id=\"consoles\">\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div id=\"editor\" class=\"mainframe-tab-H\">\n");
      out.write("\n");
      out.write("                        <div class=\"toolbar\">\n");
      out.write("                            <span id=\"btnClosePage\" class=\"glyphicon glyphicon-arrow-left\" onclick=\"showList()\"></span>\n");
      out.write("                            <b><span id=\"gridTitle\" style=\"margin-left: 20px; font-size: 18px\"/></b>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <div id=\"workspace\">\n");
      out.write("\n");
      out.write("                            <div id=\"toolbar-board\" class=\"toolbar-board\">\n");
      out.write("                                <div>\n");
      out.write("                                    <span>");
      out.print( trad.getProperty("grid.label.widget"));
      out.write(":</span>\n");
      out.write("                                    <span id=\"btnListWidget\" class=\"glyphicon glyphicon-plus\" onclick=\"showWidgetsDialog()\"></span>\n");
      out.write("                                    <span id=\"btnEditWidget\" class=\"glyphicon glyphicon-pencil\" onclick=\"showWidgetParams()\"></span>\n");
      out.write("                                    <span id=\"btnRemoveWidget\" class=\"glyphicon glyphicon-trash\" onclick=\"removeWidget()\"></span>\n");
      out.write("                                    <span id=\"btnSavePage\" style=\"margin-left: 10px\" class=\"glyphicon glyphicon-floppy-disk\" onclick=\"saveGrid()\"></span>\n");
      out.write("                                </div>\n");
      out.write("                                <div>\n");
      out.write("                                    <span id=\"updateWidgetCellInfos\" style=\"margin-right: 20px; display: none\">\n");
      out.write("                                        X : <input type=\"text\" style=\"width: 50px;\" id=\"cellInfoX\" /> -\n");
      out.write("                                        Y : <input type=\"text\" style=\"width: 50px;\" id=\"cellInfoY\" /> -\n");
      out.write("                                        W : <input type=\"text\" style=\"width: 50px;\" id=\"cellInfoW\" /> -\n");
      out.write("                                        H : <input type=\"text\" style=\"width: 50px;\" id=\"cellInfoH\" />\n");
      out.write("                                    </span>\n");
      out.write("                                    <span id=\"activateGrid\" style=\"margin-right: 20px\">\n");
      out.write("                                        <input type=\"checkbox\" id=\"checkCell\" /> ");
      out.print( trad.getProperty("grid.label.show.grid"));
      out.write("\n");
      out.write("                                    </span>\n");
      out.write("                                    <span id=\"gridCellInfos\" style=\"margin-right: 20px\"></span>\n");
      out.write("                                    <span id=\"btnClear\" class=\"glyphicon glyphicon-erase\" onclick=\"clearGrid()\"></span>\n");
      out.write("                                    <span id=\"gridResolution\" style=\"margin-left: 10px\"></span>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <div id=\"board\">\n");
      out.write("                                <div id=\"dashboard\" class=\"console\">\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div id=\"modalDialog\" class=\"grid-modal\"></div>\n");
      out.write("\n");
      out.write("        <div id=\"consoleDialog\" class=\"responsiveDialog\">\n");
      out.write("\n");
      out.write("            <div class=\"panel panel-default\">\n");
      out.write("                <div class=\"panel-heading\">\n");
      out.write("                    <h3 class=\"panel-title\">");
      out.print( trad.getProperty("grid.label.console"));
      out.write(":</h3>\n");
      out.write("                    <span class=\"pull-right clickable glyphicon glyphicon-remove\" onclick=\"hideDialogs();\"></span>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"panel-body\">\n");
      out.write("                    <form id=\"formConsole\" class=\"form-horizontal\" role=\"form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"control-label col-sm-2\" for=\"consoleCode\">");
      out.print( trad.getProperty("grid.label.code"));
      out.write(":</label>\n");
      out.write("                            <div class=\"col-sm-10\">\n");
      out.write("                                <input type=\"text\" class=\"form-control\" id=\"consoleCode\" onchange=\"updateNameNewConsole()\" />\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"control-label col-sm-2\" for=\"consoleGroup\">");
      out.print( trad.getProperty("grid.label.group"));
      out.write(":</label>\n");
      out.write("                            <div class=\"col-sm-10\">\n");
      out.write("                                <input type=\"text\" class=\"form-control\" id=\"consoleGroup\" />\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"control-label col-sm-2\" for=\"consoleName\">");
      out.print( trad.getProperty("grid.label.name"));
      out.write(":</label>\n");
      out.write("                            <div class=\"col-sm-10\">\n");
      out.write("                                <input type=\"text\" class=\"form-control\" id=\"consoleName\" />\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"control-label col-sm-2\" for=\"consoleDesignation\">");
      out.print( trad.getProperty("grid.label.designation"));
      out.write(":</label>\n");
      out.write("                            <div class=\"col-sm-10\">\n");
      out.write("                                <textarea class=\"form-control\" id=\"consoleDesignation\" rows=\"3\"></textarea>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"control-label col-sm-2\" for=\"consoleResolution\">");
      out.print( trad.getProperty("grid.label.resolution"));
      out.write("</label>\n");
      out.write("                            <div class=\"col-sm-10\">\n");
      out.write("                                <select class=\"form-control\" id=\"consoleResolution\"></select>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\" style=\"display:none\">\n");
      out.write("                            <label class=\"control-label col-sm-2\" for=\"consoleOldResolution\"><span class=\"label-oldresolution\"></span></label>\n");
      out.write("                            <div class=\"col-sm-10\">\n");
      out.write("                                <input class=\"form-control\" id=\"consoleOldResolution\" />\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </form>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"panel-body\">\n");
      out.write("                    <button type=\"button\" id=\"btnSave\" class=\"btn btn-default\" onclick=\"saveConsole(false)\">\n");
      out.write("                        <span class=\"glyphicon glyphicon-floppy-disk\"></span>\n");
      out.write("                        <span>");
      out.print( trad.getProperty("grid.label.save"));
      out.write("</span>\n");
      out.write("                    </button>\n");
      out.write("                    <button type=\"button\" id=\"btnDuplicate\" class=\"btn btn-default\" onclick=\"saveConsole(true)\">\n");
      out.write("                        <span class=\"glyphicon glyphicon-duplicate\"></span>\n");
      out.write("                        <span>");
      out.print( trad.getProperty("grid.label.duplicate"));
      out.write("</span>\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div id=\"parametersDialog\" class=\"responsiveDialog\">\n");
      out.write("\n");
      out.write("            <div class=\"panel panel-default\">\n");
      out.write("                <div class=\"panel-heading\">\n");
      out.write("                    <h3 class=\"panel-title\">");
      out.print( trad.getProperty("grid.label.parameters"));
      out.write("</h3>\n");
      out.write("                    <span class=\"pull-right clickable glyphicon glyphicon-remove\" onclick=\"hideDialogs();\"></span>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"panel-body\">\n");
      out.write("                    <form id=\"parameters\" class=\"form-horizontal\" role=\"form\">\n");
      out.write("                    </form>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div id=\"widgetsDialog\" class=\"responsiveDialog\">\n");
      out.write("\n");
      out.write("            <div class=\"panel panel-default\">\n");
      out.write("                <div class=\"panel-heading\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-md-6\">\n");
      out.write("                            <h3 class=\"panel-title\">");
      out.print( trad.getProperty("grid.label.widget.list"));
      out.write("</h3>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-md-6\" style=\"text-align: center\">\n");
      out.write("                            <label><input id=\"checkboxDevMode\" type=\"checkbox\" value=\"\">");
      out.print( trad.getProperty("grid.label.developermode") );
      out.write("</label>\n");
      out.write("                        </div>\n");
      out.write("                        <span class=\"pull-right clickable glyphicon glyphicon-remove\" onclick=\"hideDialogs();\"></span>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"panel-body\">\n");
      out.write("                    <div style=\"overflow-x: hidden; overflow-y: scroll;\">\n");
      out.write("                        <div id=\"categories\" class=\"list-group\">\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("                    \n");
      out.write("        <div id=\"deleteConfirmDialog\" class=\"responsiveDialog\">\n");
      out.write("\n");
      out.write("            <div class=\"panel panel-default\">\n");
      out.write("                <div class=\"panel-heading\">\n");
      out.write("                    <h3 class=\"panel-title\">");
      out.print( trad.getProperty("grid.label.delete.confirm.title"));
      out.write("</h3>\n");
      out.write("                    <span class=\"pull-right clickable glyphicon glyphicon-remove\" onclick=\"hideDialogs();\"></span>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"panel-body\">\n");
      out.write("                    ");
      out.print( trad.getProperty("grid.label.delete.confirm.text"));
      out.write(" <span id=\"selectedConsoleToDelete\"></span> ?\n");
      out.write("                </div>\n");
      out.write("                <div class=\"panel-footer\">\n");
      out.write("                    <div class=\"row no-margin\">\n");
      out.write("                        <div class=\"col-sm-4 col-sm-offset-1\">\n");
      out.write("                            <button class=\"btn btn-default\" onclick=\"hideDialogs();\">");
      out.print( trad.getProperty("form.button.cancel"));
      out.write("</button>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-4 col-sm-offset-1\">\n");
      out.write("                            <button class=\"btn btn-danger\" onclick=\"removeConsole(selectedConsole)\">");
      out.print( trad.getProperty("form.button.delete"));
      out.write("</button>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div id=\"saveDialog\" class=\"alert-dialog\">\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <script type=\"text/javascript\" id=\"code\">\n");
      out.write("            var inc = 0;\n");
      out.write("            var srcGroup = \"\";\n");
      out.write("            var srcName = \"\";\n");
      out.write("            var activateGrid = false;\n");
      out.write("            var lang = getParameterByName('_i18n');\n");
      out.write("            var selectedWidget = undefined;\n");
      out.write("            var isSwapping = false;\n");
      out.write("            var selectedConsole = \"\";\n");
      out.write("            \n");
      out.write("            // Dimension var\n");
      out.write("            var width = $(window).width();\t\n");
      out.write("            var height = $(window).height();\n");
      out.write("\n");
      out.write("            var workspaceHeight = height - 80; // Include header height and margin\n");
      out.write("            var workspaceWidth = width - 50; // Margin\n");
      out.write("\n");
      out.write("            var boardWidth = width - 100; // include header height + toolbar height\n");
      out.write("            var boardHeight = height - 125; // include header height + toolbar height\n");
      out.write("            \n");
      out.write("            var ratio = 1;\n");
      out.write("\n");
      out.write("            var quartisManager = new QuartisManagerGrid(\"");
      out.print( lang);
      out.write("\");\n");
      out.write("            if (lang !== undefined) {\n");
      out.write("                quartisManager = new QuartisManagerGrid(lang);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("           quartisManager.language = lang;\n");
      out.write("\n");
      out.write("            loadConsolesWithTrad();\n");
      out.write("            quartisManager.loadResolutions();\n");
      out.write("            quartisManager.loadCategories('");
      out.print( trad.getProperty("grid.label.add"));
      out.write("');\n");
      out.write("            \n");
      out.write("            function loadConsolesWithTrad() {\n");
      out.write("                quartisManager.loadConsoles('");
      out.print( trad.getProperty("grid.label.code"));
      out.write("', '");
      out.print( trad.getProperty("grid.label.group"));
      out.write("', '");
      out.print( trad.getProperty("grid.label.name"));
      out.write("', \n");
      out.write("                '");
      out.print( trad.getProperty("grid.label.designation"));
      out.write("', '");
      out.print( trad.getProperty("grid.label.resolution"));
      out.write("');   \n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function hideDialogs() {\n");
      out.write("                $(\"#modalDialog\").hide();\n");
      out.write("                $(\"#consoleDialog\").hide();\n");
      out.write("                $(\"#widgetsDialog\").hide();\n");
      out.write("                $(\"#parametersDialog\").hide();\n");
      out.write("                $(\"#saveDialog\").hide();\n");
      out.write("                $(\"#deleteConfirmDialog\").hide();\n");
      out.write("                $(\"#saveMessage\").html(\"-\");\n");
      out.write("                $(\"#selectedConsoleToDelete\").text(\"\");\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function showConsoleDialog() {\n");
      out.write("                $(\"#modalDialog\").show();\n");
      out.write("                $(\"#consoleDialog\").show();\n");
      out.write("                $(\"#widgetsDialog\").hide();\n");
      out.write("                $(\"#parametersDialog\").hide();\n");
      out.write("                $(\"#saveDialog\").hide();\n");
      out.write("                $(\"#deleteConfirmDialog\").hide();\n");
      out.write("                $(\"#saveMessage\").html(\"-\");\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function showWidgetsDialog() {\n");
      out.write("                $(\"#modalDialog\").show();\n");
      out.write("                $(\"#consoleDialog\").hide();\n");
      out.write("                $(\"#widgetsDialog\").show();\n");
      out.write("                $(\"#parametersDialog\").hide();\n");
      out.write("                $(\"#saveDialog\").hide();\n");
      out.write("                $(\"#deleteConfirmDialog\").hide();\n");
      out.write("                $(\"#saveMessage\").html(\"-\");\n");
      out.write("                \n");
      out.write("                checkDevMode();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function showParametersDialog() {\n");
      out.write("                $(\"#modalDialog\").show();\n");
      out.write("                $(\"#consoleDialog\").hide();\n");
      out.write("                $(\"#widgetsDialog\").hide();\n");
      out.write("                $(\"#parametersDialog\").show();\n");
      out.write("                $(\"#saveDialog\").hide();\n");
      out.write("                $(\"#deleteConfirmDialog\").hide();\n");
      out.write("                $(\"#saveMessage\").html(\"-\");\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            function showDeleteConfirmDialog(console) {\n");
      out.write("                selectedConsole = console;\n");
      out.write("                $(\"#selectedConsoleToDelete\").text(console);\n");
      out.write("                $(\"#modalDialog\").hide();\n");
      out.write("                $(\"#consoleDialog\").hide();\n");
      out.write("                $(\"#widgetsDialog\").hide();\n");
      out.write("                $(\"#parametersDialog\").hide();\n");
      out.write("                $(\"#saveDialog\").hide();\n");
      out.write("                $(\"#deleteConfirmDialog\").show();\n");
      out.write("                $(\"#saveMessage\").html(\"-\");\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function load(){\n");
      out.write("\t\thideDialogs();\n");
      out.write("\n");
      out.write("                $(\"#btnEditWidget\").hide();\n");
      out.write("                $(\"#btnRemoveWidget\").hide();\n");
      out.write("                \n");
      out.write("                $(\"#mainframe\").css(\"width\", width);\n");
      out.write("                $(\"#mainframe\").css(\"height\", height);\n");
      out.write("\n");
      out.write("                $(\".mainframe-tabs-H\").css(\"min-width\", width * 2);\n");
      out.write("                $(\".mainframe-tabs-H\").css(\"height\", height);\n");
      out.write("\n");
      out.write("                $(\"#list\").css(\"width\", width);\n");
      out.write("                $(\"#list\").css(\"height\", height);\n");
      out.write("\n");
      out.write("                $(\"#editor\").css(\"width\", width - 20); // 20 : margin\n");
      out.write("                $(\"#editor\").css(\"height\", height - 20); // 20 : margin\n");
      out.write("\n");
      out.write("                $(\"#workspace\").css(\"width\", workspaceWidth);\n");
      out.write("                $(\"#workspace\").css(\"height\", workspaceHeight);\n");
      out.write("\n");
      out.write("                $(\"#toolbar-board\").css(\"width\", workspaceWidth - 30);\n");
      out.write("\n");
      out.write("                $(\"#board\").css(\"width\", boardWidth);\n");
      out.write("                $(\"#board\").css(\"height\", boardHeight);\n");
      out.write("                \n");
      out.write("                var widgetDialogHeight = $(\"#modalDialog\").height();\n");
      out.write("                if (widgetDialogHeight > 900) {\n");
      out.write("                    widgetDialogHeight = 900;\n");
      out.write("                }\n");
      out.write("                $(\".responsiveDialog\").css(\"max-height\",widgetDialogHeight);\n");
      out.write("                $(\"#widgetsDialog .panel-body div\").css(\"max-height\",widgetDialogHeight - 100);\n");
      out.write("\n");
      out.write("                interact('.selected')\n");
      out.write("                    .draggable({\n");
      out.write("                        snap: {\n");
      out.write("                            targets: [\n");
      out.write("                              interact.createSnapGrid({ x: quartisManager.gridStep, y: quartisManager.gridStep })\n");
      out.write("                            ],\n");
      out.write("                            range: Infinity,\n");
      out.write("                            relativePoints: [ { x: 0, y: 0 } ]\n");
      out.write("                          },\n");
      out.write("                        onmove: dragMoveListener\n");
      out.write("                    })\n");
      out.write("                    .resizable({\n");
      out.write("                        snap: {\n");
      out.write("                            targets: [\n");
      out.write("                              interact.createSnapGrid({ x: quartisManager.gridStep, y: quartisManager.gridStep })\n");
      out.write("                            ],\n");
      out.write("                            range: Infinity,\n");
      out.write("                            relativePoints: [ { x: 0, y: 0 } ]\n");
      out.write("                          },\n");
      out.write("                        preserveAspectRatio: false,\n");
      out.write("                        edges: { left: true, right: true, bottom: true, top: true }\n");
      out.write("                    })\n");
      out.write("                    .on('resizemove', function (event) {\n");
      out.write("                        var target = event.target,\n");
      out.write("                        x = (parseFloat(target.getAttribute('data-x')) || 0),\n");
      out.write("                        y = (parseFloat(target.getAttribute('data-y')) || 0);\n");
      out.write("\n");
      out.write("                        // update the element's style\n");
      out.write("                        target.style.width  = event.rect.width + 'px';\n");
      out.write("                        target.style.height = event.rect.height + 'px';\n");
      out.write("\n");
      out.write("                        // translate when resizing from top or left edges\n");
      out.write("                        x += findGridSnap(event.deltaRect.left);\n");
      out.write("                        y += findGridSnap(event.deltaRect.top);\n");
      out.write("\n");
      out.write("                        target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px,' + y + 'px)';\n");
      out.write("\n");
      out.write("                        target.setAttribute('data-x', x);\n");
      out.write("                        target.setAttribute('data-y', y);\n");
      out.write("                        //target.textContent = Math.round(event.rect.width) + '×' + Math.round(event.rect.height);\n");
      out.write("\n");
      out.write("                        $(target).width(findGridSnap($(target).width()));\n");
      out.write("                        $(target).height(findGridSnap($(target).height()));\n");
      out.write("\n");
      out.write("                        var position = $(target).position();\n");
      out.write("                        $(\"#gridCellInfos\").html(\"x:\" + position.left + \", y:\" + position.top + \" [\" + $(target).width() + \", \" + $(target).height() + \"]\");\n");
      out.write("                    })\n");
      out.write("                    .on(['resizeend'], function (event) {\n");
      out.write("                        var target = event.target;\n");
      out.write("\n");
      out.write("                        $(target).width(findGridSnap($(target).width()));\n");
      out.write("                        $(target).height(findGridSnap($(target).height()));\n");
      out.write("\n");
      out.write("                        var ref = $(target).attr('ref');\n");
      out.write("                        var w = quartisManager.grid.findWidgetById(ref);\n");
      out.write("                        if(w !== null) {\n");
      out.write("                            var position = $(target).position();\n");
      out.write("                            w.x = position.left;\n");
      out.write("                            w.y = position.top;\n");
      out.write("                            w.width = $(target).width();\n");
      out.write("                            w.height = $(target).height();\n");
      out.write("\n");
      out.write("                            $(\"#gridCellInfos\").html(\"x:\" + position.left + \", y:\" + position.top + \" [\" + $(target).width() + \", \" + $(target).height() + \"]\");\n");
      out.write("                            reloadWidget(w);\n");
      out.write("                        }\n");
      out.write("                    })\n");
      out.write("                    .on(['dragend'], function (event) {\n");
      out.write("                        var target = event.target;\n");
      out.write("\n");
      out.write("                        var ref = $(target).attr('ref');\n");
      out.write("                        var w = quartisManager.grid.findWidgetById(ref);\n");
      out.write("                        if(w !== null) {\n");
      out.write("                            var position = $(target).position();\n");
      out.write("                            w.x = position.left;\n");
      out.write("                            w.y = position.top;\n");
      out.write("\n");
      out.write("                            $(\"#gridCellInfos\").html(\"x:\" + position.left + \", y:\" + position.top + \" [\" + $(target).width() + \", \" + $(target).height() + \"]\");\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                    \n");
      out.write("                    $(\"#loader\").hide();\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            $(function () {\n");
      out.write("                // Modification P.MAHE du 06/09/2017\n");
      out.write("                // Appel de la fonction de mise en place de la page\n");
      out.write("                // après un décalage d'1 milliseconde pour permettre\n");
      out.write("                // à Quartis-Web d'afficher l'iframe proprement et \n");
      out.write("                // d'obtenir les bonnes dimensions (sinon la page apparaît \n");
      out.write("                // blanche).\n");
      out.write("                var timeOut = 500;\n");
      out.write("\t\tsetTimeout(load, timeOut);\n");
      out.write("                \n");
      out.write("                $('#checkboxDevMode').change(function() {\n");
      out.write("                    checkDevMode();\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            function checkDevMode() {\n");
      out.write("                var checkboxDevMode = $(\"#checkboxDevMode\");\n");
      out.write("\n");
      out.write("                if (checkboxDevMode !== undefined && checkboxDevMode.length === 1) {\n");
      out.write("                    checkboxDevMode = checkboxDevMode[0];\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                var devModeCategory = findDevModeCategory();\n");
      out.write("                if (devModeCategory !== null) {\n");
      out.write("                    if (checkboxDevMode.checked) {\n");
      out.write("                        devModeCategory.style.display = 'block';\n");
      out.write("                    } else {\n");
      out.write("                        devModeCategory.style.display = 'none';\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            function findDevModeCategory() {\n");
      out.write("                var devModeCategory = null;\n");
      out.write("                \n");
      out.write("                var categories = $(\"#categories\").children();\n");
      out.write("                if (categories !== undefined && categories.length > 0) {\n");
      out.write("                    for (var i = 0; i < categories.length; i++) {\n");
      out.write("                        if (categories[i].innerHTML !== undefined && categories[i].innerHTML.indexOf('WGT_BoutonCustom') > -1) {\n");
      out.write("                            devModeCategory = categories[i];\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                return devModeCategory;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function dragMoveListener (event) {\n");
      out.write("                var target = event.target;\n");
      out.write("                var dx = findGridSnap(event.dx);\n");
      out.write("                var dy = findGridSnap(event.dy);\n");
      out.write("\n");
      out.write("                // keep the dragged position in the data-x/data-y attributes\n");
      out.write("                var x = (parseFloat(target.getAttribute('data-x')) || 0) + dx;\n");
      out.write("                var y = (parseFloat(target.getAttribute('data-y')) || 0) + dy;\n");
      out.write("\n");
      out.write("                // translate the element\n");
      out.write("                target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n");
      out.write("\n");
      out.write("                // update the posiion attributes\n");
      out.write("                target.setAttribute('data-x', x);\n");
      out.write("                target.setAttribute('data-y', y);\n");
      out.write("\n");
      out.write("                var position = $(target).position();\n");
      out.write("                $(\"#gridCellInfos\").html(\"x:\" + position.left + \", y:\" + position.top + \" [\" + $(target).width() + \", \" + $(target).height() + \"]\");\n");
      out.write("           }\n");
      out.write("\n");
      out.write("            $(document).on(\"click\", \".gridcell\", function () {\n");
      out.write("                selectWidget(this);\n");
      out.write("                $(\"#updateWidgetCellInfos\").show();\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(document).on(\"click\", \"#checkCell\", function () {\n");
      out.write("                activateGrid = !activateGrid;\n");
      out.write("                if (activateGrid) {\n");
      out.write("                    $(\"#dashboard\").addClass(\"grid\");\n");
      out.write("                } else {\n");
      out.write("                    $(\"#dashboard\").removeClass(\"grid\");\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(document).on(\"change\", \"#cellInfoX\", function() {\n");
      out.write("                var newValue = $(\"#cellInfoX\").val();\n");
      out.write("                updateWidgetPosition(\"X\", newValue);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(document).on(\"change\", \"#cellInfoY\", function() {\n");
      out.write("                var newValue = $(\"#cellInfoY\").val();\n");
      out.write("                updateWidgetPosition(\"Y\", newValue);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(document).on(\"change\", \"#cellInfoW\", function() {\n");
      out.write("                var newValue = $(\"#cellInfoW\").val();\n");
      out.write("                updateWidgetPosition(\"W\", newValue);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("           $(document).on(\"change\", \"#cellInfoH\", function() {\n");
      out.write("                var newValue = $(\"#cellInfoH\").val();\n");
      out.write("                updateWidgetPosition(\"H\", newValue);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            function updateWidgetPosition(pos, newValue) {\n");
      out.write("                newValue = Number(newValue);\n");
      out.write("                \n");
      out.write("                if (selectedWidget !== undefined) {\n");
      out.write("                    var widegtID = selectedWidget.id;\n");
      out.write("                    var w = quartisManager.grid.findWidgetById(widegtID.replace(\"_cell\", \"\"));\n");
      out.write("\n");
      out.write("                    if (pos === \"X\") {\n");
      out.write("                        $(\"#\" + widegtID).css('left', newValue + 'px');\n");
      out.write("                        w.x = newValue;\n");
      out.write("                    } else if (pos === \"Y\") {\n");
      out.write("                        $(\"#\" + widegtID).css('top', newValue + 'px');\n");
      out.write("                        w.y = newValue;\n");
      out.write("                    } else if (pos === \"W\") {\n");
      out.write("                        $(\"#\" + widegtID).css('width', newValue + 'px');\n");
      out.write("                        w.width = newValue;\n");
      out.write("                    } else if (pos === \"H\") {\n");
      out.write("                        $(\"#\" + widegtID).css('height', newValue + 'px');\n");
      out.write("                        w.height = newValue;\n");
      out.write("                    }\n");
      out.write("                    reloadWidget(w);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function showList() {\n");
      out.write("                hideDialogs();\n");
      out.write("\n");
      out.write("                quartisManager.grid = null;\n");
      out.write("\n");
      out.write("                swipeToList();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function showGrid(code) {\n");
      out.write("                hideDialogs();\n");
      out.write("\n");
      out.write("                var console = quartisManager.findConsoleByCode(code);\n");
      out.write("                if(console !== null) {\n");
      out.write("                    quartisManager.grid = new Grid(console);\n");
      out.write("\n");
      out.write("                    updateGrid();\n");
      out.write("                    swipeToGrid();\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function updateGrid() {\n");
      out.write("\n");
      out.write("                clearGrid();\n");
      out.write("\n");
      out.write("                $(\"#gridTitle\").html(quartisManager.grid.console.group + \" / \" + quartisManager.grid.console.name);\n");
      out.write("                $(\"#gridDesignation\").html(quartisManager.grid.console.designation);\n");
      out.write("                $(\"#gridResolution\").html(quartisManager.grid.console.resolution['designation']);\n");
      out.write("                \n");
      out.write("                var totalWidth = quartisManager.grid.console.resolution['width'];\n");
      out.write("                var totalHeight = quartisManager.grid.console.resolution['height'] - 50;\n");
      out.write("                \n");
      out.write("                var ratioTemp = 1;\n");
      out.write("                \n");
      out.write("                if (totalHeight > boardHeight) {\n");
      out.write("                    ratioTemp = boardHeight / totalHeight;\n");
      out.write("                }\n");
      out.write("                if (totalWidth > boardWidth && ((boardWidth / totalWidth) < ratioTemp)) {\n");
      out.write("                    ratioTemp = boardWidth / totalWidth;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                ratio = ratioTemp;\n");
      out.write("                quartisManagerWidth = totalWidth * ratio;\n");
      out.write("                quartisManagerHeight = totalHeight * ratio;\n");
      out.write("                \n");
      out.write("                $(\"#dashboard\").css(\"width\", quartisManagerWidth);\n");
      out.write("                $(\"#dashboard\").css(\"height\", quartisManagerHeight);\n");
      out.write("                \n");
      out.write("                quartisManager.grid.width = quartisManagerWidth;\n");
      out.write("                quartisManager.grid.height = quartisManagerHeight;\n");
      out.write("\n");
      out.write("                loadGrid();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function clearGrid() {\n");
      out.write("\n");
      out.write("                $(\"#dashboard\").html(\"\");\n");
      out.write("\n");
      out.write("                $('.btnWidget').each(function (index) {\n");
      out.write("                    $(this).show();\n");
      out.write("                });\n");
      out.write("\n");
      out.write("                $(\"#btnEditWidget\").hide();\n");
      out.write("                $(\"#btnRemoveWidget\").hide();\n");
      out.write("\n");
      out.write("                quartisManager.grid.widgets = [];\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function hideGrid() {\n");
      out.write("                hideDialogs();\n");
      out.write("\n");
      out.write("                quartisManager.grid = null;\n");
      out.write("\n");
      out.write("                swipeToList();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function swipeToGrid() {\n");
      out.write("                var $tabs = $('.mainframe-tabs-H');\n");
      out.write("                if (!isSwapping) {\n");
      out.write("                    isSwapping = true;\n");
      out.write("                    $tabs.animate({'left': '-=' + $(\"#list\").width() + 'px'}, 400, function () {\n");
      out.write("                        isSwapping = false;\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function swipeToList() {\n");
      out.write("                var $tabs = $('.mainframe-tabs-H');\n");
      out.write("                $tabs.animate({'left': '+=' + $(\"#list\").width() + 'px'}, 400, function () {\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function showWidgetParams() {\n");
      out.write("                showParametersDialog();\n");
      out.write("\n");
      out.write("                if(quartisManager.grid === null)\n");
      out.write("                    return;\n");
      out.write("\n");
      out.write("                $('.selected').each(function (index) {\n");
      out.write("                    var ref = $(this).attr(\"ref\");\n");
      out.write("                    var defaultWidgets = quartisManager.widgets;\n");
      out.write("                    var widget = quartisManager.grid.findWidgetById(ref);\n");
      out.write("                    var refresh = widget['refresh'];\n");
      out.write("                    var openForm = widget['openForm'];\n");
      out.write("                    var params = widget['parameters'];\n");
      out.write("                    var defaultWidget = \"\";\n");
      out.write("\n");
      out.write("                    // Récupération du paramètre\n");
      out.write("                    for (var i = 0; i < defaultWidgets.length; i++) {\n");
      out.write("                        if (getWidgetID(ref) === defaultWidgets[i].id) {\n");
      out.write("                            defaultWidget = defaultWidgets[i];\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    if (refresh === null || refresh === undefined) {\n");
      out.write("                        refresh = -1;\n");
      out.write("                    }\n");
      out.write("                    if (openForm === null || openForm === undefined) {\n");
      out.write("                        openForm = false;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    var html = \"\";\n");
      out.write("\n");
      out.write("                    html += \"<div class=\\\"form-group\\\">\"\n");
      out.write("                            + \" <label class=\\\"control-label col-sm-2\\\" for=\\\"refresh\\\">");
      out.print( trad.getProperty("grid.label.refresh"));
      out.write("</label>\"\n");
      out.write("                            + \" <div class=\\\"col-sm-10\\\">\"\n");
      out.write("                            + \"   <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"refresh\\\" value=\\\"\" + refresh + \"\\\" />\"\n");
      out.write("                            + \" </div>\"\n");
      out.write("                            + \"</div>\";\n");
      out.write("                    //html += \"<div class=\\\"form-group\\\">\"\n");
      out.write("                    //        + \" <label class=\\\"control-label col-sm-2\\\" for=\\\"showOpenForm\\\">Enable Form:</label>\"\n");
      out.write("                    //        + \" <div class=\\\"col-sm-10\\\">\"\n");
      out.write("                    //        + \"   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"showOpenForm\\\" value=\\\"\" + openForm + \"\\\" />\"\n");
      out.write("                    //        + \" </div>\"\n");
      out.write("                    //        + \"</div>\";\n");
      out.write("                    \n");
      out.write("                    var colorValue = \"\";\n");
      out.write("                    for (var i = 0; i < params.length; i++) {\n");
      out.write("                        var param = params[i];\n");
      out.write("                        var defaultParam = defaultWidget.parameters[i];\n");
      out.write("                        \n");
      out.write("                        var style = defaultParam['editable'] ? \"\" : \"style=\\\"display: none\\\"\";\n");
      out.write("                        if (param['values'] !== undefined && param['values'].length > 0) {\n");
      out.write("                            html += \"<div class=\\\"form-group\\\" \" + style + \">\"\n");
      out.write("                                    + \" <label class=\\\"control-label col-sm-2\\\" for=\\\"\" + param['name'] + \"\\\">\" + param['label'] + \":</label>\"\n");
      out.write("                                    + \" <div class=\\\"col-sm-10\\\">\"\n");
      out.write("                                    + \"   <select class=\\\"form-control\\\" id=\\\"\" + param['name'] + \"\\\" value=\\\"\" + param['value'] + \"\\\" >\";\n");
      out.write("                            var options = param['values'].split('|');\n");
      out.write("                            for (var c = 0; c < options.length; c++) {\n");
      out.write("                                if (options[c] === param['value']) {\n");
      out.write("                                    html += \"      <option value=\\\"\" + options[c] + \"\\\" selected=\\\"selected\\\">\" + options[c] + \" </option>\";\n");
      out.write("                                } else {\n");
      out.write("                                    html += \"      <option value=\\\"\" + options[c] + \"\\\">\" + options[c] + \" </option>\";\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                            html += \"   </select>\"\n");
      out.write("                                    + \" </div>\"\n");
      out.write("                                    + \"</div>\";\n");
      out.write("                        } else if (param['name'] === 'color') {\n");
      out.write("                            html += \"<div class=\\\"form-group\\\" \" + style + \">\"\n");
      out.write("                                    + \" <label class=\\\"control-label col-sm-2\\\" for=\\\"\" + param['name'] + \"\\\">\" + param['label'] + \":</label>\"\n");
      out.write("                                    + \" <div class=\\\"col-sm-10\\\">\"\n");
      out.write("                                    + \"     <input type='text' id=\\\"\" + param['name'] + \"\\\" value=\\\"\" + param['value'] + \"\\\" />\"\n");
      out.write("                                    + \" </div>\"\n");
      out.write("                                    + \"</div>\";\n");
      out.write("                            colorValue = param['value'];\n");
      out.write("                        } else {\n");
      out.write("                            html += \"<div class=\\\"form-group\\\" \" + style + \">\"\n");
      out.write("                                    + \" <label class=\\\"control-label col-sm-2\\\" for=\\\"\" + param['name'] + \"\\\">\" + param['label'] + \":</label>\"\n");
      out.write("                                    + \" <div class=\\\"col-sm-10\\\">\"\n");
      out.write("                                    + \"   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\" + param['name'] + \"\\\" value=\\\"\" + param['value'] + \"\\\" />\"\n");
      out.write("                                    + \" </div>\"\n");
      out.write("                                    + \"</div>\";\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    html += \"<div class=\\\"form-group\\\">\"\n");
      out.write("                            + \" <div class=\\\"col-sm-offset-2 col-sm-10\\\">\"\n");
      out.write("                            + \"  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"submitWidgetParams('\" + ref + \"')\\\">");
      out.print( trad.getProperty("grid.label.save"));
      out.write("</button>\"\n");
      out.write("                            + \" </div>\"\n");
      out.write("                            + \"</div>\";\n");
      out.write("                    $(\"#parameters\").html(html);\n");
      out.write("                    \n");
      out.write("                    $(\"#color\").spectrum({\n");
      out.write("                        preferredFormat: \"hex\",\n");
      out.write("                        showInput: true,\n");
      out.write("                        color: colorValue\n");
      out.write("                    });\n");
      out.write("                }); \n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function submitWidgetParams(ref) {\n");
      out.write("                if(quartisManager.grid === null)\n");
      out.write("                    return;\n");
      out.write("\n");
      out.write("                var widget = quartisManager.grid.findWidgetById(ref);\n");
      out.write("                widget['refresh'] = $(\"#refresh\").val();\n");
      out.write("\n");
      out.write("                var params = widget['parameters'];\n");
      out.write("                for (var i = 0; i < params.length; i++) {\n");
      out.write("                    var param = params[i];\n");
      out.write("                    param['value'] = $(\"#\" + param['name']).val();\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                reloadWidget(widget);\n");
      out.write("\n");
      out.write("                hideDialogs();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function reloadWidget(widget) {\n");
      out.write("                var id = widget['id'];\n");
      out.write("                var group = widget['group'];\n");
      out.write("                var name = widget['name'];\n");
      out.write("                var width = widget['width'];\n");
      out.write("                var height = widget['height'];\n");
      out.write("                var params = widget['parameters'];\n");
      out.write("\n");
      out.write("                var div = \" <div class='widget'>\"\n");
      out.write("                            + \"  <div id='\" + id + \"' style='width:100%;height:100%;'>Loading...</div>\"\n");
      out.write("                            + \"  <div id='\" + id + \"_title' class='widget-title'></div>\"\n");
      out.write("                            + \" </div>\";\n");
      out.write("                $(\"#\" + id + \"_cell\").html(div);\n");
      out.write("                quartisManager.loadWidget(id, group, name, width, height, params);\n");
      out.write("                fillCellInfoXY(widget['x'], widget['y'], width, height);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function selectWidget(obj) {\n");
      out.write("\n");
      out.write("                unselectWidgets();\n");
      out.write("                var position = $(obj).position();\n");
      out.write("                var width = $(obj).width();\n");
      out.write("                var height = $(obj).height();\n");
      out.write("                $(\"#gridCellInfos\").html(\"x:\" + position.left + \", y:\" + position.top + \" [w:\" + width + \", h:\" + height + \"]\");\n");
      out.write("                fillCellInfoXY(Number(position.left).toFixed(2), Number(position.top).toFixed(2), width, height);\n");
      out.write("\n");
      out.write("                $(obj).addClass(\"selected\");\n");
      out.write("                $(\"#btnEditWidget\").show();\n");
      out.write("                $(\"#btnRemoveWidget\").show();\n");
      out.write("\n");
      out.write("                selectedWidget = obj;\n");
      out.write("                if (obj[0] !== undefined && obj[0].id !== undefined) {\n");
      out.write("                    selectedWidget = obj[0];\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function unselectWidgets() {\n");
      out.write("                $('.selected').each(function (index) {\n");
      out.write("                    $(this).removeClass(\"selected\");\n");
      out.write("                });\n");
      out.write("                $(\"#btnEditWidget\").hide();\n");
      out.write("                $(\"#btnRemoveWidget\").hide();\n");
      out.write("\n");
      out.write("                $(\"#gridCellInfos\").html(\"\");\n");
      out.write("                selectedWidget = undefined;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function fillCellInfoXY(left, top, width, height) {\n");
      out.write("                $(\"#cellInfoX\").val(left);\n");
      out.write("                $(\"#cellInfoY\").val(top);\n");
      out.write("                $(\"#cellInfoW\").val(width);\n");
      out.write("                $(\"#cellInfoH\").val(height);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function addWidget(id) {\n");
      out.write("                hideDialogs();\n");
      out.write("                \n");
      out.write("                var widget = quartisManager.findWidgetById(id);\n");
      out.write("                \n");
      out.write("                if (widget !== null) {\n");
      out.write("                    var group = widget['group'];\n");
      out.write("                    var name = widget['name'];\n");
      out.write("                    var width = widget['width'];\n");
      out.write("                    var height = widget['height'];\n");
      out.write("                    var onClick = widget['onClick'];\n");
      out.write("                    var params = widget['parameters'];\n");
      out.write("                    var refresh = widget['refresh'];\n");
      out.write("                    \n");
      out.write("                    if (id === \"WGT_BoutonCustom\") {\n");
      out.write("                        id = generateWidgetBoutonID(id);\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    loadWidget(id, group, name, quartisManager.gridStep, quartisManager.gridStep, width, height, onClick, refresh, params);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function loadWidget(id, group, name, x, y, width, height, onClick, refresh, params) {\n");
      out.write("                \n");
      out.write("                hideDialogs();\n");
      out.write("\n");
      out.write("                if(quartisManager.grid === null)\n");
      out.write("                    return;\n");
      out.write("\n");
      out.write("                var widget = quartisManager.findWidgetById(getWidgetID(id));\n");
      out.write("                if (widget !== null) {\n");
      out.write("                    var div = \"<div id='\" + id + \"_cell' title='\" + widget.description + \"' class='gridcell' onclick='selectWidget(this);' oncontextmenu='javascript:onLeftClickGridCell(this);return false;'>\"\n");
      out.write("                            + \"</div>\";\n");
      out.write("\n");
      out.write("                    var html = $(\"#dashboard\").html();\n");
      out.write("                    html += div;\n");
      out.write("                    $(\"#dashboard\").html(html);\n");
      out.write("\n");
      out.write("                    var $widget = $(\"#\" + id + \"_cell\");\n");
      out.write("                    $widget.attr(\"ref\", id);\n");
      out.write("                    $widget.css(\"left\", x);\n");
      out.write("                    $widget.css(\"top\", y);\n");
      out.write("                    $widget.width(width);\n");
      out.write("                    $widget.height(height);\n");
      out.write("                    \n");
      out.write("                    // Blocage de tout les boutons sauf le générique si déja utilisé\n");
      out.write("                    if (id !== \"WGT_BoutonCustom\") {\n");
      out.write("                        $(\"#btn\" + id).hide();\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    quartisManager.grid.widgets.push(\n");
      out.write("                        {\n");
      out.write("                            id: id,\n");
      out.write("                            group: group,\n");
      out.write("                            name: name,\n");
      out.write("                            x: x,\n");
      out.write("                            y: y,\n");
      out.write("                            width: width,\n");
      out.write("                            height: height,\n");
      out.write("                            onClick: onClick,\n");
      out.write("                            refresh: refresh,\n");
      out.write("                            parameters: params\n");
      out.write("                        }\n");
      out.write("                    );\n");
      out.write("\n");
      out.write("                    var w = quartisManager.grid.findWidgetById(id);\n");
      out.write("                    w.id = id;\n");
      out.write("                    \n");
      out.write("                    reloadWidget(w);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function onLeftClickGridCell(event) {\n");
      out.write("                if (event.id !== undefined) {\n");
      out.write("                    $(\"#\" + event.id.replace(\"_cell\", \"\")).click();\n");
      out.write("                    showWidgetParams();\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function removeWidget() {\n");
      out.write("                hideDialogs();\n");
      out.write("\n");
      out.write("                if(quartisManager.grid === null)\n");
      out.write("                    return;\n");
      out.write("\n");
      out.write("                $('.selected').each(function (index) {\n");
      out.write("                    var ref = $(this).attr(\"ref\");\n");
      out.write("\n");
      out.write("                    var widget = quartisManager.grid.findWidgetById(ref);\n");
      out.write("                    if(widget !== null) {\n");
      out.write("                        var index = quartisManager.grid.widgets.indexOf(widget);\n");
      out.write("                        quartisManager.grid.widgets.splice(index, 1);\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    $(\"#btn\" + ref).show();\n");
      out.write("\n");
      out.write("                    $(this).removeClass(\"selected\");\n");
      out.write("                    $(this).remove();\n");
      out.write("                });\n");
      out.write("\n");
      out.write("                unselectWidgets();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function newConsole() {\n");
      out.write("                $(\"#consoleCode\").prop('readonly', false);\n");
      out.write("                $(\"#consoleGroup\").prop('readonly', false);\n");
      out.write("                $(\"#consoleName\").prop('readonly', false);\n");
      out.write("                $(\"#consoleCode\").val(\"\");\n");
      out.write("                $(\"#consoleGroup\").val(\"\");\n");
      out.write("                $(\"#consoleName\").val(\"\");\n");
      out.write("                $(\"#consoleDesignation\").val(\"\");\n");
      out.write("                $(\"#consoleResolution\").val(quartisManager.resolutions[0]['code']);\n");
      out.write("                $('#btnSave').show();\n");
      out.write("                $('#btnDuplicate').hide();\n");
      out.write("                showConsoleDialog();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function editConsole(code) {\n");
      out.write("                var console = quartisManager.findConsoleByCode(code);\n");
      out.write("                if(console !== null) {\n");
      out.write("                    $(\"#consoleCode\").prop('readonly', true);\n");
      out.write("                    $(\"#consoleGroup\").prop('readonly', true);\n");
      out.write("                    $(\"#consoleName\").prop('readonly', true);\n");
      out.write("                    $(\"#consoleCode\").val(console.code);\n");
      out.write("                    $(\"#consoleGroup\").val(console.group);\n");
      out.write("                    $(\"#consoleName\").val(console.name);\n");
      out.write("                    $(\"#consoleDesignation\").val(console.designation);\n");
      out.write("                    $(\"#consoleResolution\").val(console.resolution['code']);\n");
      out.write("                    $('#btnSave').show();\n");
      out.write("                    $('#btnDuplicate').hide();\n");
      out.write("                    showConsoleDialog();\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function copyConsole(code) {\n");
      out.write("                var console = quartisManager.findConsoleByCode(code);\n");
      out.write("                if(console !== null) {\n");
      out.write("                    srcGroup = console.group;\n");
      out.write("                    srcName = console.name;\n");
      out.write("\n");
      out.write("                    var name = console.code + \"(\" + (inc++) + \")\";\n");
      out.write("                    $(\"#consoleCode\").prop('readonly', false);\n");
      out.write("                    $(\"#consoleGroup\").prop('readonly', false);\n");
      out.write("                    $(\"#consoleName\").prop('readonly', false);\n");
      out.write("                    $(\"#consoleCode\").val(console.code);\n");
      out.write("                    $(\"#consoleGroup\").val(console.group);\n");
      out.write("                    $(\"#consoleName\").val(name);\n");
      out.write("                    $(\"#consoleDesignation\").val(console.designation);\n");
      out.write("                    $(\"#consoleResolution\").val(console.resolution['code']);\n");
      out.write("                    $(\"#consoleOldResolution\").val(console.resolution['code']);\n");
      out.write("                    $('#btnSave').hide();\n");
      out.write("                    $('#btnDuplicate').show();\n");
      out.write("                    showConsoleDialog();\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function openConsole(code) {\n");
      out.write("                showGrid(code);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function removeConsole(code) {\n");
      out.write("                var console = quartisManager.findConsoleByCode(code);\n");
      out.write("                if(console !== null) {\n");
      out.write("                    $.ajax({\n");
      out.write("                        url: \"editor\",\n");
      out.write("                        type: 'post',\n");
      out.write("                        data: {\n");
      out.write("                            action: \"remove-console\",\n");
      out.write("                            lang: quartisManager.language,\n");
      out.write("                            code: console.code,\n");
      out.write("                            group: console.group,\n");
      out.write("                            name: console.name\n");
      out.write("                        },\n");
      out.write("                        async: true,\n");
      out.write("                        crossDomain: true,\n");
      out.write("                        success: function (data, status) {\n");
      out.write("                            $(\"#saveDialog\").css(\"background-color\", \"green\");\n");
      out.write("                            $(\"#saveDialog\").css(\"color\", \"white\");\n");
      out.write("                            $(\"#saveDialog\").html(\"");
      out.print( trad.getProperty("grid.label.delete.console"));
      out.write("\");\n");
      out.write("                            $(\"#saveDialog\").show();\n");
      out.write("                            $(\"#selectedConsoleToDelete\").text(\"\");\n");
      out.write("                            $(\"#deleteConfirmDialog\").hide();\n");
      out.write("                            setTimeout(function() {\n");
      out.write("                                hideDialogs();\n");
      out.write("                                loadConsolesWithTrad();\n");
      out.write("                            }, 3000);\n");
      out.write("                        },\n");
      out.write("                        error: function (data, status, error) {\n");
      out.write("                            $(\"#saveDialog\").css(\"background-color\", \"red\");\n");
      out.write("                            $(\"#saveDialog\").css(\"color\", \"white\");\n");
      out.write("                            $(\"#saveDialog\").html(\"");
      out.print( trad.getProperty("grid.label.delete.fail.console"));
      out.write("\");\n");
      out.write("                            $(\"#saveDialog\").show();\n");
      out.write("                            setTimeout(function() {\n");
      out.write("                                $(\"#saveDialog\").hide();\n");
      out.write("                                $(\"#saveMessage\").html(\"-\");\n");
      out.write("                            }, 3000);\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function saveConsole(duplicate) {\n");
      out.write("                $.ajax({\n");
      out.write("                    url: \"editor\",\n");
      out.write("                    type: 'post',\n");
      out.write("                    data: {\n");
      out.write("                        action: duplicate ? \"duplicate-console\" : \"save-console\",\n");
      out.write("                        lang: quartisManager.language,\n");
      out.write("                        code: $(\"#consoleCode\").val(),\n");
      out.write("                        srcGroup: srcGroup,\n");
      out.write("                        srcName: srcName,\n");
      out.write("                        group: $(\"#consoleGroup\").val(),\n");
      out.write("                        name: $(\"#consoleName\").val(),\n");
      out.write("                        designation: $(\"#consoleDesignation\").val(),\n");
      out.write("                        resolution: $(\"#consoleResolution\").val(),\n");
      out.write("                        oldResolution: $(\"#consoleOldResolution\").val()\n");
      out.write("                    },\n");
      out.write("                    async: true,\n");
      out.write("                    crossDomain: true,\n");
      out.write("                    success: function (data, status) {\n");
      out.write("                        hideDialogs();\n");
      out.write("                        srcGroup = \"\";\n");
      out.write("                        srcName = \"\";\n");
      out.write("                        loadConsolesWithTrad();\n");
      out.write("\n");
      out.write("                        $(\"#saveDialog\").css(\"background-color\", \"green\");\n");
      out.write("                        $(\"#saveDialog\").css(\"color\", \"white\");\n");
      out.write("                        $(\"#saveDialog\").html(duplicate ? \"");
      out.print( trad.getProperty("grid.label.duplicate.console"));
      out.write("\" : \"");
      out.print( trad.getProperty("grid.label.save.console"));
      out.write("\");\n");
      out.write("                        $(\"#saveDialog\").show();\n");
      out.write("                        setTimeout(function() {\n");
      out.write("                            $(\"#saveDialog\").hide();\n");
      out.write("                            $(\"#saveMessage\").html(\"-\");\n");
      out.write("                        }, 3000);\n");
      out.write("                    },\n");
      out.write("                    error: function (data, status, error) {\n");
      out.write("                            $(\"#saveDialog\").css(\"background-color\", \"red\");\n");
      out.write("                            $(\"#saveDialog\").css(\"color\", \"white\");\n");
      out.write("                            if (data.responseText !== undefined && data.responseText === \"error.status.code.length.max.20\") {\n");
      out.write("                                $(\"#saveDialog\").html(\"");
      out.print( trad.getProperty("error.status.code.length.max.20"));
      out.write("\");\n");
      out.write("                            } else if (data.responseText !== undefined && data.responseText === \"error.status.code.length.min.1\") {\n");
      out.write("                                $(\"#saveDialog\").html(\"");
      out.print( trad.getProperty("error.status.code.length.min.1"));
      out.write("\");\n");
      out.write("                            } else if (data.responseText !== undefined && data.responseText === \"error.status.name.length.min.1\") {\n");
      out.write("                                $(\"#saveDialog\").html(\"");
      out.print( trad.getProperty("error.status.name.length.min.1"));
      out.write("\");\n");
      out.write("                            }\n");
      out.write("                            else {\n");
      out.write("                                $(\"#saveDialog\").html(duplicate ? \"");
      out.print( trad.getProperty("grid.label.duplicate.fail.console"));
      out.write("\" : \"");
      out.print( trad.getProperty("grid.label.save.fail.console"));
      out.write("\");\n");
      out.write("                            }\n");
      out.write("                            $(\"#saveDialog\").show();\n");
      out.write("                            setTimeout(function() {\n");
      out.write("                                $(\"#saveDialog\").hide();\n");
      out.write("                                $(\"#saveMessage\").html(\"-\");\n");
      out.write("                            }, 3000);\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function loadGrid() {                               \n");
      out.write("                if(quartisManager.grid !== null) {\n");
      out.write("                    var console = quartisManager.grid.console;\n");
      out.write("                    $.ajax({\n");
      out.write("                        url: \"editor\",\n");
      out.write("                        type: 'post',\n");
      out.write("                        data: {action: \"load-page\", lang: quartisManager.language, group: console.group, name: console.name},\n");
      out.write("                        dataType: 'json',\n");
      out.write("                        async: true,\n");
      out.write("                        crossDomain: true,\n");
      out.write("                        success: function (data, status) {\n");
      out.write("                            if(data !== null) {\n");
      out.write("                                for(var i=0; i<data['widgets'].length; i++) {\n");
      out.write("                                    var widget = data['widgets'][i];\n");
      out.write("                                    var id = widget['id'];\n");
      out.write("                                    var group = widget['group'];\n");
      out.write("                                    var name = widget['name'];\n");
      out.write("                                    var x = widget['x'];\n");
      out.write("                                    var y = widget['y'];\n");
      out.write("                                    var width = widget['width'];\n");
      out.write("                                    var height = widget['height'];\n");
      out.write("                                    var onClick = widget['onClick'];\n");
      out.write("                                    var params = widget['parameters'];\n");
      out.write("                                    var refresh = widget['refresh'];\n");
      out.write("                                    \n");
      out.write("                                    x = Number((x * ratio).toFixed(2));\n");
      out.write("                                    y = Number((y * ratio).toFixed(2));\n");
      out.write("                                    width = Number((width * ratio).toFixed(2));\n");
      out.write("                                    height = Number((height * ratio).toFixed(2));\n");
      out.write("                                    \n");
      out.write("                                    x = Number(x.toFixed(2));\n");
      out.write("                                    y = Number(y.toFixed(2));\n");
      out.write("                                    width = Number(width.toFixed(2));\n");
      out.write("                                    height = Number(height.toFixed(2));\n");
      out.write("                                   \n");
      out.write("                                    loadWidget(id, group, name, x, y, width, height, onClick, refresh, params)\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        error: function (data, status, error) {\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function saveGrid() {\n");
      out.write("                var dataGrid = JSON.parse(quartisManager.grid.serialize());\n");
      out.write("                \n");
      out.write("                dataGrid.width = dataGrid.width / ratio;\n");
      out.write("                dataGrid.height = dataGrid.height / ratio;\n");
      out.write("                for (var i = 0; i < dataGrid.widgets.length; i++) {\n");
      out.write("                    var widget = dataGrid.widgets[i];\n");
      out.write("                    widget.x = widget.x / ratio;\n");
      out.write("                    widget.y = widget.y / ratio;\n");
      out.write("                    widget.width = widget.width / ratio;\n");
      out.write("                    widget.height = widget.height / ratio;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                if(quartisManager.grid !== null) {\n");
      out.write("                    $.ajax({\n");
      out.write("                        url: \"editor\",\n");
      out.write("                        type: 'post',\n");
      out.write("                        data: {\n");
      out.write("                            action: \"save-page\",\n");
      out.write("                            lang: quartisManager.language,\n");
      out.write("                            content: JSON.stringify(dataGrid)\n");
      out.write("                        },\n");
      out.write("                        async: true,\n");
      out.write("                        crossDomain: true,\n");
      out.write("                        success: function (data, status) {\n");
      out.write("                            $(\"#saveDialog\").css(\"background-color\", \"green\");\n");
      out.write("                            $(\"#saveDialog\").css(\"color\", \"white\");\n");
      out.write("                            $(\"#saveDialog\").html(\"");
      out.print( trad.getProperty("grid.label.save.widgets"));
      out.write("\");\n");
      out.write("                            $(\"#saveDialog\").show();\n");
      out.write("                            setTimeout(function() {\n");
      out.write("                                $(\"#saveDialog\").hide();\n");
      out.write("                                $(\"#saveDialog\").html(\"-\");\n");
      out.write("                            }, 3000);\n");
      out.write("                        },\n");
      out.write("                        error: function (data, status, error) {\n");
      out.write("                            $(\"#saveDialog\").css(\"background-color\", \"red\");\n");
      out.write("                            $(\"#saveDialog\").css(\"color\", \"white\");\n");
      out.write("                            $(\"#saveDialog\").html(\"");
      out.print( trad.getProperty("grid.label.save.fail.widgets"));
      out.write("\");\n");
      out.write("                            $(\"#saveDialog\").show();\n");
      out.write("                            setTimeout(function() {\n");
      out.write("                                $(\"#saveDialog\").hide();\n");
      out.write("                                $(\"#saveDialog\").html(\"-\");\n");
      out.write("                            }, 3000);\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function findGridMin(x) {\n");
      out.write("                var min = 0;\n");
      out.write("                for(var i=0;i<1000; i++) {\n");
      out.write("                    if(min + quartisManager.gridStep > Math.abs(x)) {\n");
      out.write("                        break;\n");
      out.write("                    } else {\n");
      out.write("                        min += quartisManager.gridStep;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                min = x < 0 ? -1 * min : min;\n");
      out.write("                return min;\n");
      out.write("            }\n");
      out.write("            function findGridMax(x) {\n");
      out.write("                var max = 0;\n");
      out.write("                for(var i=0;i<1000; i++) {\n");
      out.write("                    max += quartisManager.gridStep;\n");
      out.write("                    if(max >= Math.abs(x)) {\n");
      out.write("                        break;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                max = x < 0 ? -1 * max : max;\n");
      out.write("                return max;\n");
      out.write("            }\n");
      out.write("            function findGridSnap(x) {\n");
      out.write("                var min = findGridMin(x);\n");
      out.write("                var max = findGridMax(x);\n");
      out.write("                if(Math.abs(x - min) > Math.abs(x - max)) {\n");
      out.write("                    return max;\n");
      out.write("                } else {\n");
      out.write("                    return min;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function getParameterByName(name, url) {\n");
      out.write("                if (!url) {\n");
      out.write("                  url = window.location.href;\n");
      out.write("                }\n");
      out.write("                name = name.replace(/[\\[\\]]/g, \"\\$&\");\n");
      out.write("                var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n");
      out.write("                    results = regex.exec(url);\n");
      out.write("                if (!results) return null;\n");
      out.write("                if (!results[2]) return '';\n");
      out.write("                return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function updateNameNewConsole() {\n");
      out.write("                var consoleCode = $(\"#consoleCode\");\n");
      out.write("                var consoleName = $(\"#consoleName\");\n");
      out.write("\n");
      out.write("                if (consoleCode !== undefined && consoleName !== undefined) {\n");
      out.write("                    var codeValue = consoleCode.val();\n");
      out.write("                    var nameValue = consoleName.val();\n");
      out.write("\n");
      out.write("                    if (codeValue.length > 0 && nameValue.length === 0) {\n");
      out.write("                        consoleName.val(codeValue);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            function generateUID() {\n");
      out.write("                var text = \"\";\n");
      out.write("                var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n");
      out.write("\n");
      out.write("                for (var i = 0; i < 6; i++)\n");
      out.write("                  text += possible.charAt(Math.floor(Math.random() * possible.length));\n");
      out.write("\n");
      out.write("                return text;\n");
      out.write("              }\n");
      out.write("\n");
      out.write("            \n");
      out.write("            function generateWidgetBoutonID(id) {\n");
      out.write("                return id + \"_\" + generateUID();\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            function getWidgetID(id) {\n");
      out.write("                var result = id;\n");
      out.write("                \n");
      out.write("                if (id.indexOf('WGT_BoutonCustom') > -1) {\n");
      out.write("                    result = \"\";\n");
      out.write("                    var splittedID = id.split('_');\n");
      out.write("                    for (var i = 0; i <= splittedID.length; i++) {\n");
      out.write("                        if (i !== 2 && splittedID[i] !== undefined) {\n");
      out.write("                            if (result.length === 0) {\n");
      out.write("                                result += splittedID[i];\n");
      out.write("                            } else {\n");
      out.write("                                result += \"_\" + splittedID[i];\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                return result;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            function isIE() {\n");
      out.write("                ua = navigator.userAgent;\n");
      out.write("                /* MSIE used to detect old browsers and Trident used to newer ones*/\n");
      out.write("                var is_ie = ua.indexOf(\"MSIE \") > -1 || ua.indexOf(\"Trident/\") > -1;\n");
      out.write("\n");
      out.write("                return is_ie; \n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            $('html').bind('keydown', function(e)\n");
      out.write("            {\n");
      out.write("                if(e.keyCode == 9 && isIE())\n");
      out.write("                {\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
